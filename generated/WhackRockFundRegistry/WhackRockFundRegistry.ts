// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class MaxInitialAllowedTokensLengthUpdated extends ethereum.Event {
  get params(): MaxInitialAllowedTokensLengthUpdated__Params {
    return new MaxInitialAllowedTokensLengthUpdated__Params(this);
  }
}

export class MaxInitialAllowedTokensLengthUpdated__Params {
  _event: MaxInitialAllowedTokensLengthUpdated;

  constructor(event: MaxInitialAllowedTokensLengthUpdated) {
    this._event = event;
  }

  get newLength(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RegistryAllowedTokenAdded extends ethereum.Event {
  get params(): RegistryAllowedTokenAdded__Params {
    return new RegistryAllowedTokenAdded__Params(this);
  }
}

export class RegistryAllowedTokenAdded__Params {
  _event: RegistryAllowedTokenAdded;

  constructor(event: RegistryAllowedTokenAdded) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RegistryAllowedTokenRemoved extends ethereum.Event {
  get params(): RegistryAllowedTokenRemoved__Params {
    return new RegistryAllowedTokenRemoved__Params(this);
  }
}

export class RegistryAllowedTokenRemoved__Params {
  _event: RegistryAllowedTokenRemoved;

  constructor(event: RegistryAllowedTokenRemoved) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RegistryParamsUpdated extends ethereum.Event {
  get params(): RegistryParamsUpdated__Params {
    return new RegistryParamsUpdated__Params(this);
  }
}

export class RegistryParamsUpdated__Params {
  _event: RegistryParamsUpdated;

  constructor(event: RegistryParamsUpdated) {
    this._event = event;
  }

  get usdcTokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get whackRockRewardsAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get protocolCreationFeeUsdc(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get totalAumFeeBps(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get protocolAumRecipient(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get maxAgentDepositFeeBpsAllowed(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class WhackRockFundCreated extends ethereum.Event {
  get params(): WhackRockFundCreated__Params {
    return new WhackRockFundCreated__Params(this);
  }
}

export class WhackRockFundCreated__Params {
  _event: WhackRockFundCreated;

  constructor(event: WhackRockFundCreated) {
    this._event = event;
  }

  get fundId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get fundAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get initialAgent(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get vaultName(): string {
    return this._event.parameters[4].value.toString();
  }

  get vaultSymbol(): string {
    return this._event.parameters[5].value.toString();
  }

  get vaultURI(): string {
    return this._event.parameters[6].value.toString();
  }

  get description(): string {
    return this._event.parameters[7].value.toString();
  }

  get allowedTokens(): Array<Address> {
    return this._event.parameters[8].value.toAddressArray();
  }

  get targetWeights(): Array<BigInt> {
    return this._event.parameters[9].value.toBigIntArray();
  }

  get agentAumFeeWallet(): Address {
    return this._event.parameters[10].value.toAddress();
  }

  get agentTotalAumFeeBps(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[12].value.toBigInt();
  }
}

export class WhackRockFundRegistry extends ethereum.SmartContract {
  static bind(address: Address): WhackRockFundRegistry {
    return new WhackRockFundRegistry("WhackRockFundRegistry", address);
  }

  createWhackRockFund(
    _initialAgent: Address,
    _fundAllowedTokens: Array<Address>,
    _initialTargetWeights: Array<BigInt>,
    _vaultName: string,
    _vaultSymbol: string,
    _vaultURI: string,
    _description: string,
    _agentAumFeeWalletForFund: Address,
    _agentSetTotalAumFeeBps: BigInt,
  ): Address {
    let result = super.call(
      "createWhackRockFund",
      "createWhackRockFund(address,address[],uint256[],string,string,string,string,address,uint256):(address)",
      [
        ethereum.Value.fromAddress(_initialAgent),
        ethereum.Value.fromAddressArray(_fundAllowedTokens),
        ethereum.Value.fromUnsignedBigIntArray(_initialTargetWeights),
        ethereum.Value.fromString(_vaultName),
        ethereum.Value.fromString(_vaultSymbol),
        ethereum.Value.fromString(_vaultURI),
        ethereum.Value.fromString(_description),
        ethereum.Value.fromAddress(_agentAumFeeWalletForFund),
        ethereum.Value.fromUnsignedBigInt(_agentSetTotalAumFeeBps),
      ],
    );

    return result[0].toAddress();
  }

  try_createWhackRockFund(
    _initialAgent: Address,
    _fundAllowedTokens: Array<Address>,
    _initialTargetWeights: Array<BigInt>,
    _vaultName: string,
    _vaultSymbol: string,
    _vaultURI: string,
    _description: string,
    _agentAumFeeWalletForFund: Address,
    _agentSetTotalAumFeeBps: BigInt,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createWhackRockFund",
      "createWhackRockFund(address,address[],uint256[],string,string,string,string,address,uint256):(address)",
      [
        ethereum.Value.fromAddress(_initialAgent),
        ethereum.Value.fromAddressArray(_fundAllowedTokens),
        ethereum.Value.fromUnsignedBigIntArray(_initialTargetWeights),
        ethereum.Value.fromString(_vaultName),
        ethereum.Value.fromString(_vaultSymbol),
        ethereum.Value.fromString(_vaultURI),
        ethereum.Value.fromString(_description),
        ethereum.Value.fromAddress(_agentAumFeeWalletForFund),
        ethereum.Value.fromUnsignedBigInt(_agentSetTotalAumFeeBps),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDeployedFundsCount(): BigInt {
    let result = super.call(
      "getDeployedFundsCount",
      "getDeployedFundsCount():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getDeployedFundsCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDeployedFundsCount",
      "getDeployedFundsCount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFundAddressByIndex(_index: BigInt): Address {
    let result = super.call(
      "getFundAddressByIndex",
      "getFundAddressByIndex(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_index)],
    );

    return result[0].toAddress();
  }

  try_getFundAddressByIndex(_index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFundAddressByIndex",
      "getFundAddressByIndex(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_index)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRegistryAllowedTokens(): Array<Address> {
    let result = super.call(
      "getRegistryAllowedTokens",
      "getRegistryAllowedTokens():(address[])",
      [],
    );

    return result[0].toAddressArray();
  }

  try_getRegistryAllowedTokens(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getRegistryAllowedTokens",
      "getRegistryAllowedTokens():(address[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }
}

export class AddRegistryAllowedTokenCall extends ethereum.Call {
  get inputs(): AddRegistryAllowedTokenCall__Inputs {
    return new AddRegistryAllowedTokenCall__Inputs(this);
  }

  get outputs(): AddRegistryAllowedTokenCall__Outputs {
    return new AddRegistryAllowedTokenCall__Outputs(this);
  }
}

export class AddRegistryAllowedTokenCall__Inputs {
  _call: AddRegistryAllowedTokenCall;

  constructor(call: AddRegistryAllowedTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddRegistryAllowedTokenCall__Outputs {
  _call: AddRegistryAllowedTokenCall;

  constructor(call: AddRegistryAllowedTokenCall) {
    this._call = call;
  }
}

export class BatchAddRegistryAllowedTokenCall extends ethereum.Call {
  get inputs(): BatchAddRegistryAllowedTokenCall__Inputs {
    return new BatchAddRegistryAllowedTokenCall__Inputs(this);
  }

  get outputs(): BatchAddRegistryAllowedTokenCall__Outputs {
    return new BatchAddRegistryAllowedTokenCall__Outputs(this);
  }
}

export class BatchAddRegistryAllowedTokenCall__Inputs {
  _call: BatchAddRegistryAllowedTokenCall;

  constructor(call: BatchAddRegistryAllowedTokenCall) {
    this._call = call;
  }

  get _tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class BatchAddRegistryAllowedTokenCall__Outputs {
  _call: BatchAddRegistryAllowedTokenCall;

  constructor(call: BatchAddRegistryAllowedTokenCall) {
    this._call = call;
  }
}

export class CreateWhackRockFundCall extends ethereum.Call {
  get inputs(): CreateWhackRockFundCall__Inputs {
    return new CreateWhackRockFundCall__Inputs(this);
  }

  get outputs(): CreateWhackRockFundCall__Outputs {
    return new CreateWhackRockFundCall__Outputs(this);
  }
}

export class CreateWhackRockFundCall__Inputs {
  _call: CreateWhackRockFundCall;

  constructor(call: CreateWhackRockFundCall) {
    this._call = call;
  }

  get _initialAgent(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _fundAllowedTokens(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _initialTargetWeights(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _vaultName(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _vaultSymbol(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _vaultURI(): string {
    return this._call.inputValues[5].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[6].value.toString();
  }

  get _agentAumFeeWalletForFund(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get _agentSetTotalAumFeeBps(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }
}

export class CreateWhackRockFundCall__Outputs {
  _call: CreateWhackRockFundCall;

  constructor(call: CreateWhackRockFundCall) {
    this._call = call;
  }

  get fundAddress(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class RemoveRegistryAllowedTokenCall extends ethereum.Call {
  get inputs(): RemoveRegistryAllowedTokenCall__Inputs {
    return new RemoveRegistryAllowedTokenCall__Inputs(this);
  }

  get outputs(): RemoveRegistryAllowedTokenCall__Outputs {
    return new RemoveRegistryAllowedTokenCall__Outputs(this);
  }
}

export class RemoveRegistryAllowedTokenCall__Inputs {
  _call: RemoveRegistryAllowedTokenCall;

  constructor(call: RemoveRegistryAllowedTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveRegistryAllowedTokenCall__Outputs {
  _call: RemoveRegistryAllowedTokenCall;

  constructor(call: RemoveRegistryAllowedTokenCall) {
    this._call = call;
  }
}

export class SetMaxInitialAllowedTokensLengthCall extends ethereum.Call {
  get inputs(): SetMaxInitialAllowedTokensLengthCall__Inputs {
    return new SetMaxInitialAllowedTokensLengthCall__Inputs(this);
  }

  get outputs(): SetMaxInitialAllowedTokensLengthCall__Outputs {
    return new SetMaxInitialAllowedTokensLengthCall__Outputs(this);
  }
}

export class SetMaxInitialAllowedTokensLengthCall__Inputs {
  _call: SetMaxInitialAllowedTokensLengthCall;

  constructor(call: SetMaxInitialAllowedTokensLengthCall) {
    this._call = call;
  }

  get _newMaxLength(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxInitialAllowedTokensLengthCall__Outputs {
  _call: SetMaxInitialAllowedTokensLengthCall;

  constructor(call: SetMaxInitialAllowedTokensLengthCall) {
    this._call = call;
  }
}
